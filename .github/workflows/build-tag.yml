name: Build tag

on:
  push:
    tags:
    - '*'

jobs:
  build-win-x64:

    runs-on: windows-latest

    steps:
    - name: Setup Rclone
      uses: AnimMouse/setup-rclone@v1
      with:
        rclone_config: ${{ secrets.RCLONE_CONFIG }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x

    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Download external dependencies
      run: rclone copy drive:qloader_files/dependencies.zip ./

    - name: Unpack external dependencies
      shell: pwsh
      run: |
        Expand-Archive -Path dependencies.zip -DestinationPath QSideloader -Force

    - name: Download resources
      run: rclone copy --transfers 4 drive:qloader_files/Resources.zip ./
    
    - name: Unpack resources
      shell: pwsh
      run: |
        Expand-Archive -Path Resources.zip -DestinationPath QSideloader\Resources\ -Force
    
    - name: Publish Debug
      shell: pwsh
      run: |
        Set-Location QSideloader
        dotnet publish -c Debug --self-contained true --runtime win-x64 -p:PublishSingleFile=true -o ..\win-x64
    
    - name: Prepare for upload
      shell: pwsh
      env:
        TAG_NAME: ${{ github.ref_name }}
      run: |
        $TAG_NAME = $env:TAG_NAME
        Write-Output "Packing win-x64"
        New-Item -ItemType Directory -Path builds_tag\$TAG_NAME\ -Force
        Compress-Archive -Path win-x64\* -DestinationPath builds_tag\$TAG_NAME\win-x64.zip
    
    - name: Upload artifact
      run: rclone copy -v builds_tag/ drive:qloader_files/builds_tag/

  build-linux-x64:

    runs-on: ubuntu-latest

    steps:
    - name: Setup Rclone
      uses: AnimMouse/setup-rclone@v1
      with:
        rclone_config: ${{ secrets.RCLONE_CONFIG }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x

    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Download external dependencies
      run: rclone copy drive:qloader_files/dependencies.zip ./

    - name: Unpack external dependencies
      run: unzip -q dependencies.zip -d QSideloader/

    - name: Download resources
      run: rclone copy --transfers 4 drive:qloader_files/Resources.zip ./

    - name: Unpack resources
      run: unzip -q Resources.zip -d QSideloader/Resources/
    
    - name: Publish Debug
      run: |
        cd QSideloader
        dotnet publish -c Debug --self-contained true --runtime linux-x64 -p:PublishSingleFile=true -o ../linux-x64
    
    - name: Prepare for upload
      env:
        TAG_NAME: ${{ github.ref_name }}
      run: |
        echo Packing linux-x64
        mkdir -p builds_tag/$TAG_NAME/
        chmod +x linux-x64/Loader
        chmod -R +x linux-x64/tools/
        tar cvzf builds_tag/$TAG_NAME/linux-x64.tar.gz linux-x64/*
    
    - name: Upload artifact
      run: rclone copy -v builds_tag/ drive:qloader_files/builds_tag/
  
  build-linux-arm64:

    runs-on: ubuntu-latest

    steps:
    - name: Setup Rclone
      uses: AnimMouse/setup-rclone@v1
      with:
        rclone_config: ${{ secrets.RCLONE_CONFIG }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x

    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Download external dependencies
      run: rclone copy drive:qloader_files/dependencies.zip ./

    - name: Unpack external dependencies
      run: unzip -q dependencies.zip -d QSideloader/

    - name: Download resources
      run: rclone copy --transfers 4 drive:qloader_files/Resources.zip ./

    - name: Unpack resources
      run: unzip -q Resources.zip -d QSideloader/Resources/
    
    - name: Publish Debug
      run: |
        cd QSideloader
        dotnet publish -c Debug --self-contained true --runtime linux-arm64 -p:PublishSingleFile=true -o ../linux-arm64
    
    - name: Prepare for upload
      env:
        TAG_NAME: ${{ github.ref_name }}
      run: |
        echo Packing linux-arm64
        mkdir -p builds_tag/$TAG_NAME/
        chmod +x linux-arm64/Loader
        chmod -R +x linux-arm64/tools/
        tar cvzf builds_tag/$TAG_NAME/linux-arm64.tar.gz linux-arm64/*
    
    - name: Upload artifact
      run: rclone copy -v builds_tag/ drive:qloader_files/builds_tag/

  build-osx-x64:

    runs-on: ubuntu-latest

    steps:
    - name: Setup Rclone
      uses: AnimMouse/setup-rclone@v1
      with:
        rclone_config: ${{ secrets.RCLONE_CONFIG }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x

    - name: Install tools
      run: |
        sudo apt-get update
        sudo apt-get install zip -y
    
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Download external dependencies
      run: rclone copy drive:qloader_files/dependencies.zip ./

    - name: Unpack external dependencies
      run: unzip -q dependencies.zip -d QSideloader/

    - name: Download resources
      run: rclone copy --transfers 4 drive:qloader_files/Resources.zip ./

    - name: Unpack resources
      run: unzip -q Resources.zip -d QSideloader/Resources/
    
    - name: Publish Debug
      run: |
        cd QSideloader
        dotnet publish -c Debug --self-contained true --runtime osx-x64 -p:PublishSingleFile=true -o ../osx-x64
    
    - name: Prepare for upload
      env:
        TAG_NAME: ${{ github.ref_name }}
      run: |
        echo Packing osx-x64
        mkdir -p builds_tag/$TAG_NAME/
        chmod +x osx-x64/Loader
        chmod -R +x osx-x64/tools/
        zip -r builds_tag/$TAG_NAME/osx-x64.zip osx-x64/*
    
    - name: Upload artifact
      run: rclone copy -v builds_tag/ drive:qloader_files/builds_tag/
