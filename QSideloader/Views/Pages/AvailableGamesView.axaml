<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:QSideloader.ViewModels"
             xmlns:views="clr-namespace:QSideloader.Views"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             xmlns:p="clr-namespace:QSideloader.Properties"
             xmlns:converters="clr-namespace:QSideloader.Converters"
             xmlns:controls="clr-namespace:QSideloader.Controls"
             mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="450"
             x:Class="QSideloader.Views.Pages.AvailableGamesView"
             AttachedToVisualTree="Visual_OnAttachedToVisualTree"
             DetachedFromVisualTree="Visual_OnDetachedFromVisualTree">
    <UserControl.Resources>
        <converters:OnDeviceStatusValueConverter x:Key="OnDeviceStatusFromBool" />
    </UserControl.Resources>
    <Design.DataContext>
        <vm:AvailableGamesViewModel />
    </Design.DataContext>
    <Grid RowDefinitions="Auto,*">
        <!-- ReSharper disable once Xaml.StyleClassNotFound -->
        <TextBox x:Name="SearchBox"
                 Grid.Row="0"
                 Margin="8,0,0,0"
                 Classes="clearButton"
                 AcceptsReturn="False"
                 IsReadOnly="False"
                 HorizontalAlignment="Left" VerticalAlignment="Center"
                 Watermark="{x:Static p:Resources.Search}"
                 Width="400"
                 Text="{Binding SearchText, Mode=TwoWay}"
                 ToolTip.Tip="{x:Static p:Resources.Search}" />
        <StackPanel x:Name="ButtonPanel"
                    Grid.Row="0"
                    Orientation="Horizontal"
                    Spacing="12" Margin="8"
                    HorizontalAlignment="Right">
            <Button x:Name="InstallButton"
                    Command="{Binding Install}"
                    IsEnabled="{Binding IsDeviceConnected}"
                    ToolTip.Tip="{x:Static p:Resources.DownloadAndInstallSelectedGamesTooltip}"
                    Content="{x:Static p:Resources.DownloadAndInstallSelectedButton}" />
            <Button x:Name="DownloadButton"
                    Command="{Binding Download}"
                    ToolTip.Tip="{x:Static p:Resources.DownloadSelectedGamesTooltip}"
                    Content="{x:Static p:Resources.DownloadSelectedButton}" />
            <Button x:Name="RefreshButton"
                    Command="{Binding Refresh}"
                    ToolTip.Tip="{x:Static p:Resources.RefreshAvailableGamesTooltip}"
                    Content="{x:Static p:Resources.RefreshButton}">
                <Button.CommandParameter>
                    <system:Boolean>True</system:Boolean>
                </Button.CommandParameter>
            </Button>
        </StackPanel>
        <!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
        <controls:CustomDataGrid Grid.Row="1" x:Name="AvailableGamesDataGrid"
                  Items="{Binding AvailableGames}"
                  AutoGenerateColumns="False" CanUserResizeColumns="True"
                  DoubleTapped="AvailableGamesDataGrid_OnDoubleTapped"
                  EnterKeyDown="AvailableGamesDataGrid_EnterKeyDown">
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="52"
                                        IsReadOnly="False"
                                        CanUserResize="False"
                                        IsVisible="{Binding MultiSelectEnabled}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate x:DataType="x:Boolean">
                            <CheckBox IsChecked="{Binding IsSelected}" Margin="16,0,0,0" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding GameName}" Header="{x:Static p:Resources.GameNameHeader}"
                                    Width="auto" IsReadOnly="True"
                                    IsVisible="False" />
                <DataGridTextColumn Binding="{Binding ReleaseName}" Header="{x:Static p:Resources.ReleaseNameHeader}"
                                    Width="auto"
                                    IsReadOnly="True" />
                <DataGridTextColumn Binding="{Binding LastUpdated}" Header="{x:Static p:Resources.LastUpdatedHeader}"
                                    Width="auto"
                                    IsReadOnly="True" />
                <DataGridTextColumn Binding="{Binding GameSize}" Header="{x:Static p:Resources.GameSizeHeader}"
                                    Width="auto" IsReadOnly="True" />

                <DataGridTextColumn Binding="{Binding Popularity[1D]}"
                                    Header="{x:Static p:Resources.Popularity1DHeader}" Width="auto" IsReadOnly="True"
                                    IsVisible="{Binding ShowPopularity1Day}" />
                <DataGridTextColumn Binding="{Binding Popularity[7D]}"
                                    Header="{x:Static p:Resources.Popularity7DHeader}" Width="auto" IsReadOnly="True"
                                    IsVisible="{Binding ShowPopularity7Days}" />
                <DataGridTextColumn Binding="{Binding Popularity[30D]}"
                                    Header="{x:Static p:Resources.Popularity30DHeader}" Width="auto" IsReadOnly="True"
                                    IsVisible="{Binding ShowPopularity30Days}" />

                <DataGridTextColumn Binding="{Binding IsInstalled, Converter={StaticResource OnDeviceStatusFromBool}}"
                                    Header="{x:Static p:Resources.OnDeviceHeader}" Width="auto" IsReadOnly="True"
                                    IsVisible="{Binding IsDeviceConnected}" />
            </DataGrid.Columns>
            <DataGrid.Resources>
                <!-- ReSharper disable Xaml.RedundantResource -->
                <SolidColorBrush x:Key="DataGridCellFocusVisualPrimaryBrush">Transparent</SolidColorBrush>
                <SolidColorBrush x:Key="DataGridCellFocusVisualSecondaryBrush">Transparent</SolidColorBrush>
                <!-- ReSharper restore Xaml.RedundantResource -->
            </DataGrid.Resources>
        </controls:CustomDataGrid>
        <views:LoadingProgressRingView Grid.Row="0" Grid.RowSpan="2"
                                       IsVisible="{Binding IsBusy}" />
    </Grid>
</UserControl>